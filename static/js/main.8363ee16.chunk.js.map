{"version":3,"sources":["App.tsx","index.tsx"],"names":["people","invalidPairs","generateMatches","receiver","remainingReceivers","shuffle","Array","from","matches","forEach","giver","i","candidate","some","invalidPair","includes","splice","indexOf","match","push","length","App","useState","setMatches","useEffect","map","pair","rootElement","document","getElementById","render"],"mappings":"iKAcMA,EAAmB,CACvB,MACA,SACA,WACA,OACA,WACA,SACA,QAGIC,EAA4B,CAEhC,CAAC,MAAO,UACR,CAAC,WAAY,QACb,CAAC,SAAU,YAEX,CAAC,MAAO,QACR,CAAC,SAAU,YACX,CAAC,WAAY,UACb,CAAC,OAAQ,OACT,CAAC,WAAY,UACb,CAAC,SAAU,YACX,CAAC,OAAQ,SAGX,SAASC,IACP,IAEIC,EAFEC,EAA+BC,kBAAQC,MAAMC,KAAKP,IACpDQ,EAAuB,GAmB3B,OAjBAR,EAAOS,SAAQ,SAAAC,GACb,IADuB,IAAD,WACbC,GACP,IAAMC,EAAYR,EAAmBO,GACrC,IACGV,EAAaY,MACZ,SAACC,GAAD,OACEA,EAAYC,SAASL,IAAUI,EAAYC,SAASH,OAErDF,IAAUE,EACb,CAAC,IAAD,EACaR,EAAmBY,OAAOZ,EAAmBa,QAAQL,GAAY,GAD9E,mBACCT,EADD,KAEA,IAAMe,EAAc,CAACR,EAAOP,GAE5B,OADAK,EAAQW,KAAKD,GACb,UAZKP,EAAI,EAAGA,EAAIP,EAAmBgB,OAAQT,IAAK,gBAA3CA,GAYL,UAIFH,EAAQY,SAAWpB,EAAOoB,OAAelB,IACtCM,EAGM,SAASa,IACtB,MAA8BC,mBAAsB,IAApD,mBAAOd,EAAP,KAAgBe,EAAhB,KAIA,OAHAC,qBAAU,WACHhB,GAA8B,IAAnBA,EAAQY,QAAcG,EAAWrB,OAChD,CAACM,IAEDA,GACqB,IAAnBA,EAAQY,QACRZ,EAAQY,SAAWpB,EAAOoB,OAG7B,gCACE,8CACA,6BACGZ,EAAQiB,KAAI,SAACC,GAAD,OACX,+BACE,4BAAIA,EAAK,KADX,aAC4B,4BAAIA,EAAK,OADrC,UAAYA,EAAK,GAAjB,cAAyBA,EAAK,aAN7B,+CCrEX,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACT,EAAD,IAASM,K","file":"static/js/main.8363ee16.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { shuffle } from 'lodash'\n\ntype Person =\n  | \"Rob\"\n  | \"Adelle\"\n  | \"Karaline\"\n  | \"Nick\"\n  | \"Kristina\"\n  | \"Steven\"\n  | \"Mark\";\n\ntype Pair = [Person, Person];\n\nconst people: Person[] = [\n  \"Rob\",\n  \"Adelle\",\n  \"Karaline\",\n  \"Nick\",\n  \"Kristina\",\n  \"Steven\",\n  \"Mark\"\n];\n\nconst invalidPairs: Array<Pair> = [\n  /* Spouses */\n  [\"Rob\", \"Adelle\"],\n  [\"Karaline\", \"Nick\"],\n  [\"Steven\", \"Kristina\"],\n  /* Last year [Giver, Receiver] */\n  [\"Rob\", \"Mark\"],\n  [\"Adelle\", \"Kristina\"],\n  [\"Karaline\", \"Steven\"],\n  [\"Nick\", \"Rob\"],\n  [\"Kristina\", \"Adelle\"],\n  [\"Steven\", \"Karaline\"],\n  [\"Mark\", \"Nick\"]\n];\n\nfunction generateMatches(): Array<Pair> {\n  const remainingReceivers: Person[] = shuffle(Array.from(people));\n  let matches: Array<Pair> = [];\n  let receiver: Person;\n  people.forEach(giver => {\n    for (let i = 0; i < remainingReceivers.length; i++) {\n      const candidate = remainingReceivers[i];\n      if (\n        !invalidPairs.some(\n          (invalidPair) =>\n            invalidPair.includes(giver) && invalidPair.includes(candidate)\n        )\n        && giver !== candidate\n      ) {\n        [receiver] = remainingReceivers.splice(remainingReceivers.indexOf(candidate), 1);\n        const match: Pair = [giver, receiver];\n        matches.push(match);\n        break;\n      }\n    }\n  });\n  if (matches.length !== people.length) return generateMatches()\n  return matches;\n}\n\nexport default function App() {\n  const [matches, setMatches] = useState<Array<Pair>>([]);\n  useEffect(() => {\n    if (!matches || matches.length === 0) setMatches(generateMatches());\n  }, [matches]);\n  if (\n    !matches\n    || matches.length === 0 \n    || matches.length !== people.length\n  ) return <div>'Loading...'</div>\n  return (\n    <div>\n      <h1>Secret Santa</h1>\n      <ul>\n        {matches.map((pair) => (\n          <li key={`${pair[0]} - ${pair[1]}`}>\n            <b>{pair[0]}</b> gives to <b>{pair[1]}</b>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}